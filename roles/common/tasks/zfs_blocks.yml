---
- name: Get ZFS Pool Lists
  command: zpool list
  register: zfs_pool_lists
  when:
    - zfs_backend

- name: Get ZFS Dataset Lists
  command: zfs list
  register: zfs_dataset_lists
  when:
    - zfs_backend

- name: Remove Exsisting ZFS Block Device Partition for MongoDB
  parted:
    device: "/dev/{{ zfs_block_device }}"
    number: "{{ item.num }}"
    state: absent
  with_items:
    - "{{ zfs_block_info.partitions }}"
  when:
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend

- name: Create ZFS Block Device Partition for MongoDB
  parted:
    device: "/dev/{{ zfs_block_device }}"
    number: 1
    part_type: primary
    part_start: 0%
    part_end: 100%
    state: present
  when:
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend

- name: Get ZFS Block Device Partition Info
  parted:
    device: "/dev/{{ zfs_block_device }}1"
    unit: MiB
  register: zfs_partition_info
  when:
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend

- name: Create ZFS Pool for MongoDB
  command: zpool create {{ zfs_pool_name }} -o ashift=12 -O compression=lz4 /dev/{{ zfs_block_device }}1
  when:
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend
    - zfs_dataset_lists.stdout.find(zfs_pool_name) == -1

- name: Create ZFS Dataset for MongoDB
  command: zfs create -s -o volblocksize=64k -V {{ zfs_partition_info.disk.size }}M {{ zfs_pool_name }}/mongodb
  when:
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend
    - zfs_dataset_lists.stdout.find(zfs_pool_name ~ "/mongodb") == -1

- name: Get ZFS Dataset Device Status for MongoDB
  stat:
    path: "/dev/zvol/{{ zfs_pool_name }}/mongodb"
  register: zfs_dataset_mongo_status
  when:
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend

- name: Format ZFS Dataset for MongoDB
  filesystem:
    dev: "/dev/zvol/{{ zfs_pool_name }}/mongodb"
    fstype: xfs
    force: yes
  when:
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend
    - zfs_dataset_mongo_status.stat.exists
