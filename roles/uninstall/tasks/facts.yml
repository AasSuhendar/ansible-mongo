---
- name: Fail if Operating System is not Supported
  fail:
    msg: "Minimum Operating System Version Ubuntu 14.04"
  when:
    - ansible_distribution != 'Ubuntu'
    - ansible_distribution_major_version | int >= 14

- name: Get Service Init Status
  stat:
    path: /sbin/init
  register: service_init_status

- name: Get MongoDB Node Service Info
  command: bash -c "service mongod status | grep not-found || true"
  register: mongod_service_info
  when:
    - service_init_status.stat.exists

- name: Get MongoDB Router Service Info
  command: bash -c "service mongos status | grep not-found || true"
  register: mongos_service_info
  when:
    - service_init_status.stat.exists

- name: Get ZFS Block Device Status
  stat:
    path: "/dev/{{ zfs_block_device }}"
  register: zfs_block_status
  when:
    - zfs_block_device is defined

- name: Get ZFS Block Device Info
  parted:
    device: "/dev/{{ zfs_block_device }}"
    unit: MiB
  register: zfs_block_info
  when:
    - zfs_block_device is defined
    - zfs_block_status.stat.exists

- name: Set Host Facts
  set_fact:
    full_uninstall: "{{ full_uninstall | default(default_value, true) }}"
    zfs_backend: "{{ zfs_backend if zfs_block_device is defined else 'false' | default(default_value, true) }}"
    zfs_pool_name: "{{ zfs_pool_name | default(default_value, true) }}"
    primary: "{{ primary | default(default_value, true) }}"
    arbiter: "{{ arbiter | default(default_value, true) }}"

- name: Make Sure Primary Node is not Arbiter Node
  set_fact:
    arbiter: 'false'
  when:
    - primary

- name: Make Sure ZFS Backend not Enabled if ZFS Block Device not Exist
  set_fact:
    zfs_backend: 'false'
  when:
    - not zfs_block_status.stat.exists

- name: Make Sure ZFS Backend not Enabled if Node is Arbiter Node
  set_fact:
    zfs_backend: 'false'
  when:
    - arbiter

- name: Get ZFS Dataset Lists
  command: zfs list
  register: zfs_dataset_lists
  when:
    - zfs_backend
