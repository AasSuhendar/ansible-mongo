---
- name: Check Operating System
  fail:
    msg: "Operating System is not Supported!"
  when:
    - ansible_distribution != 'Ubuntu'
    - ansible_distribution_major_version | int >= 14
    - ansible_distribution_minor_version | int == 4

- name: Set Global Facts
  set_fact:
    full_uninstall: "{{ full_uninstall | default(default_value, true) }}"
    zfs_backend: "{{ zfs_backend if zfs_block_device is defined else 'false' | default(default_value, true) }}"
    zfs_pool_name: "{{ zfs_pool_name | default(default_value, true) }}"
  delegate_to: "{{ item }}"
  with_items:
    - localhost
  run_once: true

- name: Set Host Facts
  set_fact:
    primary: "{{ primary | default(default_value, true) }}"
    arbiter: "{{ arbiter | default(default_value, true) }}"

- name: Set Arbiter Facts
  set_fact:
    arbiter: 'false'
  when:
    - primary

- name: Set System Daemon Facts
  command: bash -c "which systemd || true"
  register: systemd_service

- name: Set ZFS Block Device Facts
  stat:
    path: "/dev/{{ zfs_block_device }}"
  register: zfs_block_stat

- name: Set ZFS Backend Facts
  set_fact:
    zfs_backend: 'false'
  when:
    - ansible_distribution_major_version | int < 16
    - not zfs_block_stat.stat.exists

- name: Set MongoDB Node Service Facts
  command: bash -c "service mongod status | grep not-found || true"
  register: mongod_service

- name: Disable MongoDB Node Service
  systemd:
    name: mongod
    enabled: no
    state: stopped
  when:
    - mongod_service.stdout.find("not-found") == -1

- name: Set MongoDB Router Service Facts
  command: bash -c "service mongos status | grep not-found || true"
  register: mongos_service

- name: Disable MongoDB Router Service
  service:
    name: mongos
    enabled: no
    state: stopped
  when:
    - mongos_service.stdout.find("not-found") == -1

- name: Remove MongoDB Router Service (Init)
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/init.d/mongos
  when:
    - mongos_service.stdout.find("not-found") == -1
    - systemd_service.stdout.find("systemd") == -1

- name: Remove MongoDB Router Service (SystemD)
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/systemd/system/mongos.service
  when:
    - mongos_service.stdout.find("not-found") == -1
    - systemd_service.stdout.find("systemd") != -1

- name: Find Exsisting MongoDB Scripts
  find:
    paths: /tmp
    patterns: "mongo*"
    use_regex: true
  register: mongodb_scripts_to_delete

- name: Remove Exsisting MongoDB Scripts
  file:
    path: "{{ item['path'] }}"
    state: absent
  with_items:
    - "{{ mongodb_scripts_to_delete['files'] }}"

- name: Find Exsisting MongoDB Configuration
  find:
    paths: /etc
    patterns: "mongo*"
    use_regex: true
  register: mongodb_config_to_delete

- name: Remove Exsisting MongoDB Configuration
  file:
    path: "{{ item['path'] }}"
    state: absent
  with_items:
    - "{{ mongodb_config_to_delete['files'] }}"

- name: Remove MongoDB Database Directories
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /var/lib/mongodb/data
    - /var/lib/mongodb/log
    - /var/lib/mongodb/pki

- name: Unmount ZFS Dataset from MongoDB Directory
  mount:
    path: /var/lib/mongodb
    state: absent
  when:
    - full_uninstall
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend
    - not arbiter

- name: Remove MongoDB Parrent Directory
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /var/lib/mongodb
  when:
    - not zfs_backend

- name: Remove MongoDB Run Directory
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /var/run/mongodb

- name: Uninstall MongoDB Packages
  apt:
    name: "{{ item }}"
    force_apt_get: yes
    autoremove: yes
    autoclean: yes
    purge: yes
    state: absent
  with_items:
    - mongodb-org
  when:
    - full_uninstall

- name: Uninstall MongoDB Repository
  file:
    path: /etc/apt/sources.list.d/mongodb-org-3.6.list
    state: absent
  when:
    - full_uninstall

- name: Uninstall MongoDB Keyring
  apt_key:
    id: 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
    state: absent
  when:
    - full_uninstall

- name: Remove ZFS Dataset for MongoDB
  command: bash -c "zfs destroy -fR {{ zfs_pool_name }}/mongodb || true"
  when:
    - full_uninstall
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend
    - not arbiter

- name: Remove ZFS Pool for MongoDB
  command: bash -c "zpool destroy -f {{ zfs_pool_name }} || true"
  when:
    - full_uninstall
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend
    - not arbiter

- name: Get ZFS Block Device Info
  parted:
    device: "/dev/{{ zfs_block_device }}"
    unit: MiB
  register: zfs_block_info
  when:
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend
    - not arbiter

- name: Remove ZFS Block Device Partition for MongoDB
  parted:
    device: "/dev/{{ zfs_block_device }}"
    number: "{{ item.num }}"
    state: absent
  with_items:
    - "{{ zfs_block_info.partitions }}"
  when:
    - group_names == ['mongoc'] or group_names == ['mongod']
    - zfs_backend
    - not arbiter

- name: Remove Generated Keyfile
  file:
    path: /tmp/keyfile.pem
    state: absent
  delegate_to: "{{ item }}"
  with_items:
    - localhost
  run_once: true

- name: Reload System Daemon
  systemd:
    daemon_reload: yes
  when:
    - systemd_service.stdout.find("systemd") != -1
